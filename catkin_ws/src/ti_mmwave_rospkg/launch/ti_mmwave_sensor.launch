<!--
  ti_mmwave_rospkg Launch 
 -->

<launch>

  <!-- Input arguments -->
  <arg name="device" doc="TI mmWave sensor device type [1443, 1642, 6843]"/>
  <arg name="config" doc="TI mmWave sensor device configuration [3d_best_range_res (not supported by 1642 EVM), 2d_best_range_res]"/>
  <arg name="max_allowed_elevation_angle_deg" default="90" doc="Maximum allowed elevation angle in degrees for detected object data [0 > value >= 90]}"/>
  <arg name="max_allowed_azimuth_angle_deg" default="90" doc="Maximum allowed azimuth angle in degrees for detected object data [0 > value >= 90]}"/>
  <arg name="radar_frame_id" default="1" doc="Number of frame to attach the pointcloud to"/>
  <arg name="mmWave_Manager_name" default="mmWave_Manager1" doc="Radar manager name"/>
  <arg name="command_port" default="/dev/ttyACM0" doc=""/>
  <arg name="data_port" default="/dev/ttyACM1" doc=""/>

  <!-- mmWave_Manager node -->
  <!-- The node name and mmWave_Manager_name must match!!! -->
  <node pkg="ti_mmwave_rospkg" type="ti_mmwave_rospkg" name="$(arg mmWave_Manager_name)" output="screen">
    <param name="command_port" value="$(arg command_port)"  />
    <param name="command_rate" value="115200"   />
    <param name="data_port" value="$(arg data_port)"  />
    <param name="data_rate" value="921600"   />
    <param name="max_allowed_elevation_angle_deg" value="$(arg max_allowed_elevation_angle_deg)"   />
    <param name="max_allowed_azimuth_angle_deg" value="$(arg max_allowed_azimuth_angle_deg)"   />
    <param name="radar_frame_id" value="$(arg radar_frame_id)"   />
    <param name="mmWave_Manager_name" value="$(arg mmWave_Manager_name)"   />
  </node>
  
  <!-- mmWaveQuickConfig node (terminates after configuring mmWave sensor) -->
  <!-- This does not require name change if you do not run two mmWaveQuickConfig at the same time -->
  <node pkg="ti_mmwave_rospkg" type="mmWaveQuickConfig" name="mmWaveQuickConfig" args="$(find ti_mmwave_rospkg)/cfg/$(arg device)_$(arg config).cfg $(arg mmWave_Manager_name)" output="screen" />
  
</launch>
